@model ReflectionIT.Mvc.Paging.PagingList<OneRosterSync.Net.Models.DataSyncLine>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@using OneRosterSync.Net.Utils;

@{
    ViewData["Title"] = $"{ViewData["DistrictName"]} - Records";
    var allRouteData = Model.RouteValue.ToDictionary(rv => rv.Key, rv => rv.Value.ToString());

    var districtId = Model.RouteValue["districtId"];
    var filter = Model.RouteValue["filter"];
    var table = Model.RouteValue["table"];
    var loadStatus = Model.RouteValue["loadStatus"];
    var syncStatus = Model.RouteValue["syncStatus"];

    var loadStatusEnum = Html.GetEnumSelectList<OneRosterSync.Net.Models.LoadStatus>();
    var syncStatusEnum = Html.GetEnumSelectList<OneRosterSync.Net.Models.SyncStatus>();
}

<h2>@ViewData["DistrictName"]: Records</h2>

<div class="row">
    <form method="get" class="form-inline">
        <input type="hidden" name="districtId" value="@districtId" />
        <input name="filter" class="form-control" placeholder="Source/Target Id" asp-for="@filter" />

        <select class="form-control" asp-for="@table">
            <option value="">(Table)</option>
            <option value="CsvOrg">CsvOrg</option>
            <option value="CsvCourse">CsvCourse</option>
            <option value="CsvClass">CsvClass</option>
            <option value="CsvUser">CsvUser</option>
            <option value="CsvEnrollment">CsvEnrollment</option>
        </select>

        <select class="form-control" asp-for="@loadStatus" asp-items="loadStatusEnum">
            <option value="">(Load Status)</option>
        </select>

        <select class="form-control" asp-for="@syncStatus" asp-items="syncStatusEnum">
            <option value="">(Sync Status)</option>
        </select>

        <button type="submit" class="btn btn-info">
            <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Filter Records
        </button>

        <a class="btn btn-primary" asp-action="DataSyncLines"
           asp-all-route-data="@allRouteData" role="button">Clear Filters</a>
    </form>
</div>

<br />

<div class="row">
    <div class="col-md-4">
        <a asp-action="DistrictDashboard" asp-all-route-data="@allRouteData"><< Back to District Dashboard</a>
        <br />
        <br />
        Matching Records: @Model.TotalRecordCount.ToString("N0")
    </div>
    <div class="pull-right">
        <nav aria-label="Products navigation example">
            <vc:pager paging-list="@Model" />
        </nav>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Table)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SourceId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TargetId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RawData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoadStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SyncStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IncludeInSync)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Error)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastSeen)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Version)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Modified)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Table)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SourceId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TargetId)
            </td>
            <td>
                <pre>@JsonUtilities.FormatJson(item.RawData)</pre>
                @if (!string.IsNullOrEmpty(item.EnrollmentMap))
                {
                    <span>Enrollment Map</span>
                    <pre>@JsonUtilities.FormatJson(item.EnrollmentMap)</pre>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoadStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SyncStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IncludeInSync)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Error)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastSeen)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Version)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modified)
            </td>
        </tr>
        }
    </tbody>
</table>
