@using OneRosterSync.Net.Components
@model OneRosterSync.Net.Models.District
@{
    ViewData["Title"] = "Edit District";
}

<div class="row">
    <div class="col-md-10">
        <h2>School District: <b>@Model.Name</b></h2>
    </div>
    <div class="col-md-2 pull-right" style="padding-top:10px;">
        <form asp-action="DistrictDelete">
            <input type="hidden" asp-for="DistrictId" />
            <div class="form-group">
                <input type="submit" value="Delete District" class="btn btn-sm btn-danger" />
            </div>
        </form>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        @await Html.PartialAsync("DistrictDetails", Model)
        <a asp-action="DistrictEdit" asp-route-id="@Model.DistrictId" class="btn btn-primary" role="button" aria-pressed="true">Edit District</a>
    </div>
    <div class="col-md-6">

        <h4>Manage Automation</h4>
        <hr />

        <div class="col-md-8">
            <div class="row">
                <div class=" col-lg-12">
                    <a asp-action="DataSyncLines" asp-route-districtId="@Model.DistrictId" class="btn btn-primary" role="button" aria-pressed="true">Records</a>
                    <a asp-action="DistrictReport" asp-route-districtId="@Model.DistrictId" class="btn btn-primary" role="button" aria-pressed="true">Report</a>
                    <a asp-action="SelectCourses" asp-route-districtId="@Model.DistrictId" class="btn btn-primary" role="button" aria-pressed="true">Select Courses</a>
                </div>
            </div>
            <br />
            <div class="row">
                <div class=" col-lg-12">
                    <form asp-action="DistrictProcess">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="DistrictId" />
                        <div class="form-group">
                            <label asp-for="NextProcessingTime" class="control-label"></label>:
                            @(Model.NextProcessingTime.HasValue ? Model.NextProcessingTime.ToString() : "(none)")
                        </div>
                        <div class="form-group">
                            <label asp-for="ProcessingStatus" class="control-label"></label>:
                            @Model.ProcessingStatus
                        </div>
                        <div class="form-group">
                            <label asp-for="Modified" class="control-label"></label>:
                            @Model.Modified.ToLocalTime()
                        </div>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class=" col-lg-12">
                    <div>Manually Process step by step:</div>
                    <table>
                        <tbody>
                            <tr>
                                <td style="padding-right:5px;"><form asp-action="Load"><input type="hidden" asp-for="DistrictId" /><div class="form-group"><input type="submit" value="Load" class="btn btn-primary" /></div></form></td>
                                <td style="padding-right:5px;"><form asp-action="Analyze"><input type="hidden" asp-for="DistrictId" /><div class="form-group"><input type="submit" value="Analyze" class="btn btn-primary" /></div></form></td>
                                <td style="padding-right:5px;"><form asp-action="Apply"><input type="hidden" asp-for="DistrictId" /><div class="form-group"><input type="submit" value="Apply" class="btn btn-primary" /></div></form></td>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    <div>Manually invoke full process in one shot:</div>
                    <form asp-action="FullProcess"><input type="hidden" asp-for="DistrictId" /><div class="form-group"><input type="submit" value="Full Process" class="btn btn-primary" /></div></form>

                </div>
            </div>
        </div>
    </div>
</div>

<br />
<br />

<div class="row">
    <h4>Processing History</h4>
    <hr />

    <div class="col-md-9">
        @await Component.InvokeAsync(typeof(DataSyncHistories).Name, new { district = Model })
    </div>
</div>
